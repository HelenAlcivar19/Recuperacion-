# -*- coding: utf-8 -*-
"""[NRC_8903]_ETL_Recuperacion_Unidad3_HelenAlcivar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MiB6Xu1rrzEL1_Axeg_17aQPV27MFti0
"""

import pandas as pd
import numpy as np 
from sqlalchemy import create_engine
from sqlalchemy import Table, Column, Integer, String, MetaData, ForeignKey
from sqlalchemy import inspect
from sqlalchemy import MetaData
import sqlite3
import datetime
import sqlalchemy

"""Limpieza de datos 
EXTRACCION
"""

dfHA = pd.read_csv("Building_Permits.csv")
dfHA.head(10)

"""transformacion de datos """

dfHA.dropna().isnull()
dfHA.head(10)

"""llenar datos faltantes """

dfHA.fillna(method='bfill', axis=0).fillna(0)

"""Identificacionde registros duplicados """

dfHA.columns.duplicated()

"""Eliminacion"""

dfHA.drop_duplicates()

"""eliminacion de espacion en blanco"""

dfHA.replace(' ','')
dfHA.head()

"""cambio de case"""

dfHA['Description'] = dfHA['Description'].str.upper()
dfHA['Permit Type Definition'] = dfHA['Permit Type Definition'].str.upper()
dfHA['Street Name'] = dfHA['Street Name'].str.upper()
dfHA['Neighborhoods - Analysis Boundaries'] = dfHA['Neighborhoods - Analysis Boundaries'].str.upper()
dfHA['Existing Construction Type Description'] = dfHA['Existing Construction Type Description'].str.upper()
dfHA['Proposed Construction Type Description'] = dfHA['Proposed Construction Type Description'].str.upper()
dfHA['Current Status'] = dfHA['Current Status'].str.upper()
dfHA['Existing Use'] = dfHA['Existing Use'].str.upper()
dfHA.head()

"""llena de datos completos """

dfHA['Fire Only Permit'] = dfHA['Fire Only Permit'].fillna('N')
dfHA['Unit'] = dfHA['Unit'].fillna('0')
print(dfHA['Fire Only Permit'])

"""eliminacionde colunmas no  necesarias"""

dfHA = dfHA.drop(columns=['Site Permit'])
dfHA = dfHA.drop(columns=['TIDF Compliance'])
dfHA = dfHA.drop(columns=['Street Number Suffix'])
dfHA = dfHA.drop(columns=['Structural Notification'])
dfHA = dfHA.drop(columns=['Existing Units'])
dfHA = dfHA.drop(columns=['Voluntary Soft-Story Retrofit'])
dfHA = dfHA.drop(columns=['Proposed Construction Type'])
dfHA = dfHA.drop(columns=['Unit Suffix'])

dfHA.head()

"""contar valores faltantes """

dfHA.isnull().sum()

df = pd.DataFrame(dfHA)

df_re = df[['Zipcode','Location']]
df_re['id_Permit'] = df_re.index
df_re['id_Record'] = df_re.index
df_re['Neighborhoods_Analysis'] = df_re.index
df_re.head()

df = pd.DataFrame(dfHA)

df_per = df[['Permit Number','Permit Type','Permit Type Definition','Permit Creation Date']]
df_per.columns = ['Permit_Number','Permit_Type','Permit_Type_Definition','Permit_Creation_Date']
df_per['id_street'] = df_per.index

df_per.head()